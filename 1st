#!/bin/sh # Installation script requirements for licensing systems. if [[ $EUID -ne 0 ]]; then echo "You must be a root user" 2>&1 exit 1 fi arch=$(uname -i) if [[ $arch == i*86 ]]; then echo "We no longer support 32-bit versions . Please contact with support!" exit 1 fi if [[ $arch == aarch64 ]]; then echo "We no longer support aarch64 versions . Please contact with support!" exit 1 fi RED='\033[0;31m' GREEN='\033[0;32m' NC='\033[0m' upgradeCommand="" if [ -f /etc/redhat-release ]; then upgradeCommand="yum " if grep -q 'Rocky Linux' /etc/redhat-release; then echo "Rocky Linux detected. You cant use Rocky Linux for our licensing system, Please install an supported operating system." exit 1 fi elif [ -f /etc/lsb-release ]; then upgradeCommand="apt-get " elif [ -f /etc/os-release ]; then upgradeCommand="apt-get " fi modules="" tools="" command -v wget >/dev/null 2>&1 || { echo "We require wget but it's not installed." >&2 tools="wget" } command -v curl >/dev/null 2>&1 || { echo "We require curl but it's not installed." >&2 tools=${tools}" curl" } command -v sudo >/dev/null 2>&1 || { echo "We require sudo but it's not installed." >&2 tools=${tools}" sudo" } command -v openssl >/dev/null 2>&1 || { echo "We require openssl but it's not installed." >&2 tools=${tools}" openssl" } command -v tar >/dev/null 2>&1 || { echo "We require openssl but it's not installed." >&2 tools=${tools}" tar" } command -v unzip >/dev/null 2>&1 || { echo "We require Unzip but it's not installed." >&2 tools=${tools}" unzip" } if [ -f /etc/yum.repos.d/mysql-community.repo ]; then sed -i "s|enabled=1|enabled=0|g" /etc/yum.repos.d/mysql-community.repo fi if [ ! "$tools" == "" ]; then $upgradeCommand install $tools -y fi if [ ! "$modules" == "" ]; then if [ "$upgradeCommand" == "yum " ]; then if [ ! -f /etc/yum.repos.d/epel.repo ]; then yum install epel-release -y else sed -i "s|https|http|g" /etc/yum.repos.d/epel.repo fi fi if [ "$upgradeCommand" == "apt-get " ]; then touch /etc/apt/sources.list sudo apt-get update $upgradeCommand install $moduleselse -y else $upgradeCommand install $modules -y fi fi echo -n "Start downloading primary system...Depending on the speed of your server network, it may take some time ... " wget -qq --timeout=15 --tries=5 -O /usr/bin/CSPUpdate --no-check-certificate https://license.toshan.net/CSPUpdateV2/linux/CSPUpdateV2 if [ $? -eq 0 ]; then echo -e "${GREEN}Completed!${NC}" if [ -f /usr/bin/CSPUpdate ]; then chmod +x /usr/bin/CSPUpdate if [ $? -ne 0 ]; then echo "\n" echo -e "${RED}Exit code: $? - Failed to execute 'chmod +x /usr/bin/CSPUpdate'. Contact support ${NC}" fi else echo "\n" echo -e "${RED} File /usr/bin/CSPUpdate not found. Contact support ${NC}" fi else echo -e "${RED}File Downloading failed. ${NC}" fi mkdir -p /usr/local/csp/3rdparty /usr/local/csp/data /usr/local/csp/bin chmod +x /usr/bin/CSPUpdate if [ "$1" != "" ]; then /usr/bin/CSPUpdate -i $1 fi
